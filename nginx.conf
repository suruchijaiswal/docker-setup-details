user  www-data;
worker_processes auto;
pid /run/nginx.pid;

events { worker_connections 1024; }

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  sendfile      on;
  keepalive_timeout 65;
  server_tokens off;

  # -------- UI on port 80 (no CORS needed) --------
  server {
    listen 80 default_server;
    listen [::]:80 default_server;

    root /var/www/ui;
    index index.html;

    # SPA fallback
    location / {
      try_files $uri /index.html;
    }

    # (Optional) If the UI already calls /api/... you can keep this proxy too
    location /api/ {
      proxy_pass http://127.0.0.1:8080/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }

  # -------- CORS facade on port 8081 --------
  # Host port 8080 will map to this, so http://localhost:8080 hits here.
  server {
    listen 8081;
    listen [::]:8081;

    # Only proxy /api; add CORS headers so the browser is happy
    location /api/ {

      # Handle preflight
      if ($request_method = OPTIONS) {
        add_header Access-Control-Allow-Origin "http://localhost" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
        add_header Access-Control-Allow-Credentials "true" always;
        return 204;
      }

      add_header Access-Control-Allow-Origin "http://localhost" always;
      add_header Access-Control-Allow-Credentials "true" always;

      proxy_pass http://127.0.0.1:8080/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Any non-API path on :8081 -> redirect to the main site
    location / {
      return 301 http://localhost$request_uri;
    }
  }
}
